
package com.unisinsight.vdp.core.manager.integration.vms.pre.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "VideoManagerService", targetNamespace = "http://webservice.arges.com/", wsdlLocation = "http://192.168.105.140:9010/macs_cloud/webServices/VideoManager?wsdl")
public class VideoManagerService
    extends Service
{

    private static final Logger logger						= LoggerFactory
            .getLogger(VideoManagerService.class);
    private final static URL VIDEOMANAGERSERVICE_WSDL_LOCATION;
    private final static WebServiceException VIDEOMANAGERSERVICE_EXCEPTION;
    private final static QName VIDEOMANAGERSERVICE_QNAME = new QName("http://webservice.arges.com/", "VideoManagerService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            logger.info("准备加载VMS Webservice配置url=[{}]", WebServiceConfig.urlPath);
            url = new URL(WebServiceConfig.urlPath);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        VIDEOMANAGERSERVICE_WSDL_LOCATION = url;
        VIDEOMANAGERSERVICE_EXCEPTION = e;
    }

    public VideoManagerService() {
        super(__getWsdlLocation(), VIDEOMANAGERSERVICE_QNAME);
    }

    public VideoManagerService(WebServiceFeature... features) {
        super(__getWsdlLocation(), VIDEOMANAGERSERVICE_QNAME, features);
    }

    public VideoManagerService(URL wsdlLocation) {
        super(wsdlLocation, VIDEOMANAGERSERVICE_QNAME);
    }

    public VideoManagerService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, VIDEOMANAGERSERVICE_QNAME, features);
    }

    public VideoManagerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public VideoManagerService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns VideoManager
     */
    @WebEndpoint(name = "VideoManagerPort")
    public VideoManager getVideoManagerPort() {
        return super.getPort(new QName("http://webservice.arges.com/", "VideoManagerPort"), VideoManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VideoManager
     */
    @WebEndpoint(name = "VideoManagerPort")
    public VideoManager getVideoManagerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.arges.com/", "VideoManagerPort"), VideoManager.class, features);
    }

    private static URL __getWsdlLocation() {
        if (VIDEOMANAGERSERVICE_EXCEPTION!= null) {
            throw VIDEOMANAGERSERVICE_EXCEPTION;
        }
        return VIDEOMANAGERSERVICE_WSDL_LOCATION;
    }

}
